{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","fields","fieldsArray","inputsArray","i","length","insertAdjacentHTML","id","labelsArr","forEach","input","inputIndex","letterIndx","name","toUpperCase","textContent","placeholder","inputName"],"mappings":";AAAA,aAeA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EARA,IALA,IAAMA,EAASC,SAASC,iBAAiB,eACnCC,EAASF,SAASC,iBAAiB,UACnCE,EAAmBD,EAAAA,GACnBE,EAAmBL,EAAAA,GAEhBM,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IACtCF,EAAYE,GAAGE,mBAAmB,aACnBH,oBAAAA,OAAAA,EAAYC,GAAGG,GAD9B,uCAKF,IAAMC,EAAiBT,EAAAA,SAASC,iBAAiB,iBAEjDG,EAAYM,QAAQ,SAACC,EAAOC,GACrB,IAAA,IAAIC,EAAa,EAAGA,EAAaF,EAAMG,KAAKR,OAAQO,IAAc,CACjEF,EAAMG,KAAKD,KAAgBF,EAAMG,KAAKD,GAAYE,eAClC,IAAfF,IACHJ,EAAUG,GAAYI,aAAe,IACrCL,EAAMM,aAAe,KAGjBC,IAAAA,EAAYP,EAAMG,KAAKD,GAE7BF,EAAMM,aAA8B,IAAfJ,EACjBK,EAAUH,cAAgBG,EAE9BT,EAAUG,GAAYI,aAAeL,EAAMG,KAAKD","file":"main.51b269b0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('.field-text');\nconst fields = document.querySelectorAll('.field');\nconst fieldsArray = [ ...fields ];\nconst inputsArray = [ ...inputs ];\n\nfor (let i = 0; i < inputsArray.length; i++) {\n  fieldsArray[i].insertAdjacentHTML('afterbegin', `\n    <label for=${inputsArray[i].id} class ='field-label'></label>\n  `);\n}\n\nconst labelsArr = [ ...document.querySelectorAll('.field-label') ];\n\ninputsArray.forEach((input, inputIndex) => {\n  for (let letterIndx = 0; letterIndx < input.name.length; letterIndx++) {\n    if (input.name[letterIndx] === input.name[letterIndx].toUpperCase()\n      && letterIndx !== 0) {\n      labelsArr[inputIndex].textContent += ' ';\n      input.placeholder += ' ';\n    }\n\n    const inputName = input.name[letterIndx];\n\n    input.placeholder += letterIndx === 0\n      ? inputName.toUpperCase() : inputName;\n\n    labelsArr[inputIndex].textContent += input.name[letterIndx];\n  }\n});\n"]}